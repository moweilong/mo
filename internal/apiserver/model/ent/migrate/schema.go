// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id", SchemaType: map[string]string{"mysql": "int", "postgres": "serial"}},
		{Name: "create_by", Type: field.TypeUint32, Nullable: true, Comment: "创建者ID"},
		{Name: "update_by", Type: field.TypeUint32, Nullable: true, Comment: "更新者ID"},
		{Name: "create_time", Type: field.TypeTime, Nullable: true, Comment: "创建时间"},
		{Name: "update_time", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "delete_time", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "remark", Type: field.TypeString, Nullable: true, Comment: "备注", Default: ""},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Comment: "状态", Enums: []string{"OFF", "ON"}, Default: "ON"},
		{Name: "tenant_id", Type: field.TypeUint32, Nullable: true, Comment: "租户ID"},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true, Comment: "用户名"},
		{Name: "nickname", Type: field.TypeString, Nullable: true, Size: 255, Comment: "昵称"},
		{Name: "realname", Type: field.TypeString, Nullable: true, Size: 255, Comment: "真实名字"},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 320, Comment: "电子邮箱"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Size: 255, Comment: "手机号码", Default: ""},
		{Name: "telephone", Type: field.TypeString, Nullable: true, Size: 255, Comment: "座机号码", Default: ""},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Size: 1023, Comment: "头像"},
		{Name: "address", Type: field.TypeString, Nullable: true, Size: 2048, Comment: "地址", Default: ""},
		{Name: "region", Type: field.TypeString, Nullable: true, Size: 255, Comment: "国家地区", Default: ""},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 1023, Comment: "个人说明"},
		{Name: "gender", Type: field.TypeEnum, Nullable: true, Comment: "性别", Enums: []string{"SECRET", "MALE", "FEMALE"}},
		{Name: "authority", Type: field.TypeEnum, Nullable: true, Comment: "授权", Enums: []string{"SYS_ADMIN", "TENANT_ADMIN", "CUSTOMER_USER", "GUEST"}, Default: "CUSTOMER_USER"},
		{Name: "last_login_time", Type: field.TypeTime, Nullable: true, Comment: "最后一次登录的时间"},
		{Name: "last_login_ip", Type: field.TypeString, Nullable: true, Size: 64, Comment: "最后一次登录的IP", Default: ""},
		{Name: "org_id", Type: field.TypeUint32, Nullable: true, Comment: "部门ID"},
		{Name: "position_id", Type: field.TypeUint32, Nullable: true, Comment: "职位ID"},
		{Name: "work_id", Type: field.TypeUint32, Nullable: true, Comment: "员工工号"},
		{Name: "roles", Type: field.TypeJSON, Nullable: true, Comment: "多角色角色码列表"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Comment:    "用户表",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[0]},
			},
			{
				Name:    "user_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[8]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UsersTable,
	}
)

func init() {
	UsersTable.Annotation = &entsql.Annotation{
		Table:     "users",
		Charset:   "utf8mb4",
		Collation: "utf8mb4_bin",
	}
}

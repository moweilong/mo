// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/moweilong/mo/internal/apiserver/model/ent/schema"
	"github.com/moweilong/mo/internal/apiserver/model/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields4 := userMixin[4].Fields()
	_ = userMixinFields4
	userMixinFields5 := userMixin[5].Fields()
	_ = userMixinFields5
	userMixinFields6 := userMixin[6].Fields()
	_ = userMixinFields6
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescRemark is the schema descriptor for remark field.
	userDescRemark := userMixinFields4[0].Descriptor()
	// user.DefaultRemark holds the default value on creation for the remark field.
	user.DefaultRemark = userDescRemark.Default.(string)
	// userDescTenantID is the schema descriptor for tenant_id field.
	userDescTenantID := userMixinFields6[0].Descriptor()
	// user.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	user.TenantIDValidator = userDescTenantID.Validators[0].(func(uint32) error)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescNickname is the schema descriptor for nickname field.
	userDescNickname := userFields[1].Descriptor()
	// user.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	user.NicknameValidator = userDescNickname.Validators[0].(func(string) error)
	// userDescRealname is the schema descriptor for realname field.
	userDescRealname := userFields[2].Descriptor()
	// user.RealnameValidator is a validator for the "realname" field. It is called by the builders before save.
	user.RealnameValidator = userDescRealname.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[3].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescMobile is the schema descriptor for mobile field.
	userDescMobile := userFields[4].Descriptor()
	// user.DefaultMobile holds the default value on creation for the mobile field.
	user.DefaultMobile = userDescMobile.Default.(string)
	// user.MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	user.MobileValidator = userDescMobile.Validators[0].(func(string) error)
	// userDescTelephone is the schema descriptor for telephone field.
	userDescTelephone := userFields[5].Descriptor()
	// user.DefaultTelephone holds the default value on creation for the telephone field.
	user.DefaultTelephone = userDescTelephone.Default.(string)
	// user.TelephoneValidator is a validator for the "telephone" field. It is called by the builders before save.
	user.TelephoneValidator = userDescTelephone.Validators[0].(func(string) error)
	// userDescAvatar is the schema descriptor for avatar field.
	userDescAvatar := userFields[6].Descriptor()
	// user.AvatarValidator is a validator for the "avatar" field. It is called by the builders before save.
	user.AvatarValidator = userDescAvatar.Validators[0].(func(string) error)
	// userDescAddress is the schema descriptor for address field.
	userDescAddress := userFields[7].Descriptor()
	// user.DefaultAddress holds the default value on creation for the address field.
	user.DefaultAddress = userDescAddress.Default.(string)
	// user.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	user.AddressValidator = userDescAddress.Validators[0].(func(string) error)
	// userDescRegion is the schema descriptor for region field.
	userDescRegion := userFields[8].Descriptor()
	// user.DefaultRegion holds the default value on creation for the region field.
	user.DefaultRegion = userDescRegion.Default.(string)
	// user.RegionValidator is a validator for the "region" field. It is called by the builders before save.
	user.RegionValidator = userDescRegion.Validators[0].(func(string) error)
	// userDescDescription is the schema descriptor for description field.
	userDescDescription := userFields[9].Descriptor()
	// user.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	user.DescriptionValidator = userDescDescription.Validators[0].(func(string) error)
	// userDescLastLoginIP is the schema descriptor for last_login_ip field.
	userDescLastLoginIP := userFields[13].Descriptor()
	// user.DefaultLastLoginIP holds the default value on creation for the last_login_ip field.
	user.DefaultLastLoginIP = userDescLastLoginIP.Default.(string)
	// user.LastLoginIPValidator is a validator for the "last_login_ip" field. It is called by the builders before save.
	user.LastLoginIPValidator = userDescLastLoginIP.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(uint32) error)
}

name: Manage Submodule Tags and Changelog

on:
  push:
    tags:
    - 'v*'
  workflow_dispatch: # 允许手动触发

env:
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.MO_TOKEN }}
  MAIN_BRANCH: main # 主分支名称，根据实际情况修改

jobs:
  Manage-Releases:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.MAIN_BRANCH }} # 切换到主分支

      - name: Configure Git
        run: |
          git config --global user.email "kalandramo@gmail.com"
          git config --global user.name "moweilong"

      - name: Get Previous Tag
        id: get_prev_tag
        run: |
          # 获取上一个标签，如果不存在则设为空
          if [ $(git tag --list | wc -l) -lt 2 ]; then
            echo "prev_tag=" >> $GITHUB_OUTPUT
          else
            prev_tag=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
            echo "prev_tag=$prev_tag" >> $GITHUB_OUTPUT
          fi
          # 当前标签
          main_tag=${GITHUB_REF#refs/tags/}
          echo "main_tag=$main_tag" >> $GITHUB_OUTPUT

      - name: Create Submodule Tags (With Change Check)
        run: |
          main_tag=${{ steps.get_prev_tag.outputs.main_tag }}
          prev_tag=${{ steps.get_prev_tag.outputs.prev_tag }}
          directories=("entx id")
          
          echo "Starting submodule tag creation for main tag: $main_tag"
          echo "Comparing with previous tag: ${prev_tag:-none}"
          
          for dir in "${directories[@]}"; do
            # 检查目录是否存在
            if [ ! -d "$dir" ]; then
              echo "Directory $dir does not exist, skipping"
              continue
            fi
            
            # 为每个找到的go.mod文件检查变更并创建标签
            find "$dir" -name "go.mod" | sort -u | while read -r file; do
              submodule_path=$(dirname "$file")
              submodule_tag="${submodule_path}/${main_tag}"
              
              echo "Processing submodule: $submodule_path"
              
              # 检查标签是否已存在
              if git rev-parse "$submodule_tag" >/dev/null 2>&1; then
                echo "Tag $submodule_tag already exists, skipping"
                continue
              fi
              
              # 检查子模块是否有变更
              has_changes=0
              
              if [ -z "$prev_tag" ]; then
                # 如果没有上一个标签，检查是否有任何提交
                if [ -n "$(git log --pretty=format:'%h' -- "$submodule_path")" ]; then
                  has_changes=1
                fi
              else
                # 比较与上一个标签之间的变更
                if [ -n "$(git diff --name-only $prev_tag $main_tag -- "$submodule_path")" ]; then
                  has_changes=1
                fi
              fi
              
              # 只有有变更时才创建标签
              if [ $has_changes -eq 1 ]; then
                echo "Changes detected in $submodule_path. Creating and pushing tag: $submodule_tag"
                git tag "$submodule_tag"
                git push origin "$submodule_tag"
              else
                echo "No changes detected in $submodule_path. Skipping tag creation."
              fi
            done
          done
